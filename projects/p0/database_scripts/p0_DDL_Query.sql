--Before doing anything, use master
USE master;
go

--Drop database
--DROP TABLE Store.OrderProduct;
--DROP TABLE Store.StoreOrder;
--DROP TABLE Store.Product;
--DROP TABLE Store.Store;
--DROP TABLE Customer.Customer;
--go

--Create database
CREATE DATABASE StoreApplicationDB;
go

--Use the database after creating it to interact with it.
USE StoreApplicationDB;
go

CREATE SCHEMA Store;
go

CREATE SCHEMA Customer;
go

CREATE TABLE Customer.Customer
(
	CUSTOMERID SMALLINT PRIMARY KEY IDENTITY(1,1),
	CUSTOMERNAME VARCHAR(100) NOT NULL,
	ACTIVE BIT NOT NULL,
);

EXECUTE sp_rename 'Customer.Customer.CUSTOMERNAME', 'Name', 'COLUMN';


CREATE TABLE Store.Store
(
	STOREID TINYINT PRIMARY KEY IDENTITY(1,1),
	STORENAME VARCHAR(100) NOT NULL,
	STORECITY VARCHAR (100),
	STORESTATE CHAR(2),
	ACTIVE BIT NOT NULL,
);

CREATE TABLE Store.Product
(
	PRODUCTID SMALLINT PRIMARY KEY IDENTITY(1,1),
	PRODUCTNAME VARCHAR(100) NOT NULL,
	PRODUCTDESC VARCHAR(255),
	PRICE MONEY NOT NULL,
	ACTIVE BIT NOT NULL,
);

CREATE TABLE Store.StoreOrder
(
	ORDERID SMALLINT PRIMARY KEY IDENTITY(1,1),
	CUSTOMERID SMALLINT NOT NULL,
	STOREID TINYINT NOT NULL,
	ORDERDATE DATETIME2 NOT NULL,
	ACTIVE BIT NOT NULL,
);

CREATE TABLE Store.OrderProduct
(
	ORDERID SMALLINT NOT NULL,
	PRODUCTID SMALLINT NOT NULL,
	ACTIVE BIT NOT NULL
);
GO

--Alter Table
ALTER TABLE Store.StoreOrder
ADD CONSTRAINT FK_ORDER_CUSTOMER FOREIGN KEY (CUSTOMERID) REFERENCES Customer.Customer(CUSTOMERID);

ALTER  TABLE Store.StoreOrder
ADD CONSTRAINT FK_ORDER_STORE FOREIGN KEY (STOREID) REFERENCES Store.Store(STOREID);

ALTER TABLE Store.OrderProduct
ADD CONSTRAINT FK_ORDER_ORDER FOREIGN KEY (ORDERID) REFERENCES Store.StoreOrder(ORDERID);

ALTER TABLE Store.OrderProduct
ADD CONSTRAINT FK_ORDER_PRODUCT FOREIGN KEY (PRODUCTID) REFERENCES Store.Product(PRODUCTID);

ALTER TABLE Customer.Customer
ADD CONSTRAINT DF_Customer default (1) for Active;

ALTER TABLE Store.Store
ADD CONSTRAINT DF_Store default (1) for Active;

ALTER TABLE Store.StoreOrder
ADD CONSTRAINT DF_Order default (1) for Active;

ALTER TABLE Store.OrderProduct
ADD CONSTRAINT DF_OrderProduct default (1) for Active;

ALTER TABLE Store.Product
ADD CONSTRAINT DF_Product default (1) for Active;

ALTER TABLE Store.StoreOrder
ADD CONSTRAINT CK_Order CHECK (ORDERDATE >= GETDATE());
GO

CREATE TABLE Store.StoreInventory
(
	STOREID TINYINT NOT NULL,
	PRODUCTID SMALLINT NOT NULL,
	NUMINSTOCK SMALLINT NOT NULL,
	ACTIVE BIT NOT NULL
);

ALTER TABLE Store.StoreInventory
ADD CONSTRAINT FK_INVENTORY_STORE FOREIGN KEY (STOREID) REFERENCES Store.Store(STOREID);

ALTER TABLE Store.StoreInventory
ADD CONSTRAINT FK_INVENTORY_PRODUCT FOREIGN KEY (PRODUCTID) REFERENCES Store.Product(PRODUCTID);

ALTER TABLE Store.StoreInventory
ADD CONSTRAINT DF_Inventory default (1) for Active;
GO

--Stored Procedure
CREATE OR ALTER PROCEDURE SP_AddCustomer(@NAME varchar(100))
AS
BEGIN
	DECLARE @matchname VARCHAR(100);

	SELECT @matchname = [name]
	FROM Customer.Customer
	WHERE [name] = @NAME;

	IF(@matchname IS NULL)
	BEGIN
		INSERT INTO Customer.Customer([name])
		VALUES (@NAME)
	END
END

EXEC SP_AddCustomer 'Fred';